{"version":3,"sources":["store/ui.js","store/cart.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","App.js","store/index.js","index.js"],"names":["uiSlice","createSlice","name","initialState","cartIsVisible","reducers","toggleCart","state","uiActions","actions","JSON","parse","sessionStorage","getItem","items","totalQuantity","cartSlice","addItemToCart","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","setItem","stringify","removeItemFromCart","itemId","filter","cartActions","CartItem","props","dispatch","useDispatch","title","className","onClick","Cart","useSelector","cart","cartContent","length","map","console","log","MainHeader","showCart","ui","cartQty","type","Layout","children","ProductItem","description","image","src","alt","toFixed","DUMMY_PRODUCTS","Products","product","App","store","configureStore","reducer","cartReducer","uiReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb25c9d1.chunk.js","sourcesContent":["\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    cartIsVisible: false\n};\n\nconst uiSlice = createSlice({\n    name: 'ui',\n    initialState,\n    reducers: {\n        toggleCart(state){\n            state.cartIsVisible = !state.cartIsVisible\n        }\n    }\n});\n\nexport default uiSlice.reducer\n\nexport const uiActions = uiSlice.actions\n","\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = JSON.parse(sessionStorage.getItem('FoodyStoreCart')) || {\n    items: [],\n    totalQuantity: 0\n};\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addItemToCart(state, action){\n            const newItem = action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id);\n\n            if( existingItem ){\n                existingItem.quantity++;\n                existingItem.totalPrice += newItem.price;\n            } else {\n                state.items.push({\n                    ...newItem,\n                    quantity: 1,\n                    totalPrice: newItem.price\n                });\n            }\n\n            state.totalQuantity++;\n            sessionStorage.setItem('FoodyStoreCart', JSON.stringify(state));\n        },\n        removeItemFromCart(state, action){\n            const itemId = action.payload;\n            const existingItem = state.items.find(item => item.id === itemId);\n            \n            if( existingItem.quantity === 1 ){\n                state.items = state.items.filter(item => item.id !== itemId);\n            } else {\n                existingItem.quantity--;\n                existingItem.totalPrice -= existingItem.price;\n            }\n\n            state.totalQuantity--;\n            sessionStorage.setItem('FoodyStoreCart', JSON.stringify(state));\n        }\n    }\n})\n\nexport default cartSlice.reducer\n\nexport const cartActions = cartSlice.actions\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart';\n\nconst CartItem = props => {\n    const dispatch = useDispatch();\n    const { id, title, quantity, price, totalPrice } = props.item;\n    const removeItemHandler = () => {\n        dispatch(cartActions.removeItemFromCart(id));\n    };\n    const addItemHandler = () => {\n        dispatch(cartActions.addItemToCart({\n            id, title, price\n        }));\n    };\n\n    return (\n        <div key={id} className=\"flex-shrink-0 m-4 w-64 p-4 rounded-lg border-2 border-purple-100\">\n            <h3 className=\"text-xl font-bold text-indigo-800\">{title}</h3>\n            <p>\n                &euro;{totalPrice}\n            </p>\n            <div className=\"flex mt-4\">\n                <button onClick={removeItemHandler} className=\"btn-indigo btn-circle p-0 flex-shrink-0 -mr-4 relative text-lg\">-</button>\n                <span className=\"w-full border-b-2 border-indigo-900 text-center flex items-center justify-center\"\n                >\n                    x{quantity}\n                </span>\n                <button onClick={addItemHandler} className=\"btn-indigo btn-circle p-0 flex-shrink-0 -ml-4 relative text-lg\">+</button>\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem\n","import { useSelector } from 'react-redux'\nimport CartItem from './CartItem';\n\nconst Cart = props => {\n    const items = useSelector(state => state.cart.items);\n    const sendOrderHandler = () => {\n        console.log('ORDER SENT!');\n    };\n    let cartContent = <div className=\"mx-auto p-4\">Cart is empty!</div>;\n\n    if( items.length > 0 ){\n        cartContent = (\n            <div className=\"flex items-center\">\n                <div className=\"flex-1 flex overflow-auto\">\n                    {items.map(item => (\n                        <CartItem \n                            key={item.id}\n                            item={item}\n                        />\n                    ))}\n                </div>\n                <div className=\"p-4\">\n                    <button onClick={sendOrderHandler} className=\"btn-indigo\">SEND ORDER</button>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"bg-white text-black\">\n            <div className=\"container mx-auto\">\n                {cartContent}\n            </div>\n        </div>\n    )\n}\n\nexport default Cart\n","import { useDispatch, useSelector } from 'react-redux'\nimport { uiActions } from '../../store/ui';\nimport Cart from '../Cart/Cart';\n\nconst MainHeader = props => {\n    const dispatch = useDispatch();\n    const showCart = useSelector(state => state.ui.cartIsVisible);\n    const cartQty = useSelector(state => state.cart.totalQuantity);\n    const toggleCartHandler = () => {\n        dispatch(uiActions.toggleCart());\n    };\n\n    return (\n        <div className=\"sticky top-0\">\n            <header className=\"bg-indigo-800\">\n                <div className=\"container mx-auto flex items-center p-4\">\n                    <h1 className=\"text-2xl\">FoodyApp</h1>\n                    <nav className=\"flex ml-auto\">\n                        <button onClick={toggleCartHandler} type=\"button\" className=\"btn-gray\">Cart ({cartQty})</button>\n                    </nav>\n                </div>\n            </header>\n            {showCart && <Cart />}\n        </div>\n    )\n}\n\nexport default MainHeader\n","\nimport { Fragment } from 'react'\nimport MainHeader from './MainHeader'\n\nconst Layout = props => {\n    return (\n        <Fragment>\n            <MainHeader />\n            <main>\n                {props.children}\n            </main>\n        </Fragment>\n    )\n}\n\nexport default Layout\n","\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart';\n\nconst ProductItem = props => {\n    const dispatch = useDispatch();\n    const { id, title, price, description, image = 'https://via.placeholder.com/200x200' } = props;\n\n    const addToCartHandler = () => {\n        const item = { id, title, price, description, image };\n        dispatch(cartActions.addItemToCart(item));\n    };\n\n    return (\n        <div className=\"flex flex-start flex-col md:flex-row items-center my-6 bg-white text-gray-400 rounded-lg overflow-hidden shadow-md\">\n            <div className=\"flex-shrink-0 w-48 h-48\">\n                <img src={image} className=\"w-full h-full\" alt=\"\" />\n            </div>\n            <div className=\"w-full flex-1 p-4\">\n                <h3 className=\"text-2xl font-bold text-indigo-800\">{title}</h3>\n                <p>{description}</p>\n            </div>\n            <div className=\"flex-shrink-0 self-stretch p-4 text-center flex flex-col\">\n                <h4 className=\"font-bold text-black text-xl mb-3\">&euro; {price.toFixed(2)}</h4>\n                <button onClick={addToCartHandler} className=\"btn-indigo mt-auto\">ADD</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductItem\n","\nimport ProductItem from './ProductItem';\n\nconst DUMMY_PRODUCTS = [\n    {\n        id: 'p1',\n        price: 6,\n        title: 'Pizza Margherita',\n        description: 'This is a first product - amazing!'\n    },\n    {\n        id: 'p2',\n        price: 9,\n        title: 'Pasta al Ragù',\n        description: 'This is a second product - amazing!'\n    },\n    {\n        id: 'p3',\n        price: 4,\n        title: 'Ceasar Salad',\n        description: 'This is a third product - amazing!'\n    },\n    {\n        id: 'p4',\n        price: 5,\n        title: 'Ice Cream',\n        description: 'This is a fourth product - amazing!'\n    },\n    {\n        id: 'p5',\n        price: 8,\n        title: 'Hamburger',\n        description: 'This is a fifth product - amazing!'\n    },\n    {\n        id: 'p6',\n        price: 16,\n        title: 'Steak',\n        description: 'This is a sixth product - amazing!'\n    },\n    {\n        id: 'p7',\n        price: 6,\n        title: 'Carrots',\n        description: 'This is a seventh product - amazing!'\n    }\n];\n\nconst Products = (props) => {\n    return (\n        <div className=\"container max-w-3xl p-4 mx-auto\">\n            <div className=\"text-center mt-8 mb-12\">\n                <h2 className=\"text-4xl\">Products List</h2>\n                <p className=\"text-2xl font-light\">Your favourite foods. In a tap.</p>\n            </div>\n            <div className=\"\">\n                {DUMMY_PRODUCTS.map((product) => (\n                    <ProductItem\n                        key={product.id}\n                        id={product.id}\n                        title={product.title}\n                        price={product.price}\n                        description={product.description}\n                        image={product.image}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Products;\n","\nimport './index.css';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nfunction App() {\n  return (\n    <Layout>\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n","\nimport { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './cart';\nimport uiReducer from './ui';\n\nconst store = configureStore({\n    reducer: {\n        cart: cartReducer,\n        ui: uiReducer\n    }\n})\n\nexport default store\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}